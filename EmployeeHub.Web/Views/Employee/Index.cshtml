@model IEnumerable<EmployeeHub.Models.Models.Employee>

@{
    ViewBag.Title = "Index";
}

<!--
<!DOCTYPE html>
<html>
    <head>
        <meta name="viewport" content="width=device-width" />
        <title>ShowGrid</title>
        <script src="//ajax.googleapis.com/ajax/libs/jquery/1.11.1/jquery.min.js"></script>
        <link href="~/Content/bootstrap.css" rel="stylesheet" />

        <link href="https://cdn.datatables.net/1.10.15/css/dataTables.bootstrap.min.css" rel="stylesheet" />
        <link href="https://cdn.datatables.net/responsive/2.1.1/css/responsive.bootstrap.min.css" rel="stylesheet" />

        <script src="https://cdn.datatables.net/1.10.15/js/jquery.dataTables.min.js"></script>
        <script src="https://cdn.datatables.net/1.10.15/js/dataTables.bootstrap4.min.js "></script>

        <script>
            $(document).ready(function () {
                $("#EmployeeList").DataTable({

                    "processing": true, // for show progress bar
                    "serverSide": true, // for process server side
                    "filter": true, // this is for disable filter (search box)
                    "orderMulti": false, // for disable multiple column at once
                    "pageLength": 5,

                    "ajax": {
                        "url": "/Demo/LoadData",
                        "type": "POST",
                        "datatype": "json"
                    },

                    "columnDefs":
                        [{
                            "targets": [0],
                            "visible": false,
                            "searchable": false
                        },
                        {
                            "targets": [7],
                            "searchable": false,
                            "orderable": false
                        },
                        {
                            "targets": [8],
                            "searchable": false,
                            "orderable": false
                        },
                        {
                            "targets": [9],
                            "searchable": false,
                            "orderable": false
                        }],

                    "columns": [
                        { "data": "Name", "name": "Name", "autoWidth": true },
                        { "data": "BirthDate", "name": "BirthDate", "autoWidth": true },
                        { "data": "Age", "title": "Age", "name": "ContactName", "autoWidth": true },
                        { "data": "Skill", "name": "Skill", "autoWidth": true },
                        {
                            "render": function (data, type, full, meta) { return '<a class="btn btn-info" href="/Demo/Edit/' + full.Id + '">Edit</a>'; }
                        },
                        {
                            data: null, render: function (data, type, row) {
                                return "<a href='#' class='btn btn-danger' onclick=DeleteData('" + row.Id + "'); >Delete</a>";
                            }
                        },

                    ]

                });
            });
        </script>
    </head>
    <body>
        </body>
</html>

    -->
<h2>Index</h2>

<p>
    @Html.ActionLink("Create New", "Create")
</p>
<table class="table" id="EmployeeList">
    <tr>
        <th>
            @Html.DisplayNameFor(model => model.Name)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.BirthDate)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.Age)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.Skill)
        </th>
        <th></th>
    </tr>

    @foreach (var item in Model)
    {
        <tr>
            <td>
                @Html.DisplayFor(modelItem => item.Name)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.BirthDate)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Age)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Skill)
            </td>
            <td>
                @Html.ActionLink("Edit", "Edit", new { id = item.Id }) |
                @Html.ActionLink("Details", "Details", new { id = item.Id }) |
                @Html.ActionLink("Delete", "Delete", new { id = item.Id })
            </td>
        </tr>
    }

</table>







